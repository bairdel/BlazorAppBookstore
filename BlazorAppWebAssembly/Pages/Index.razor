@page "/"
@using BlazorAppWebAssembly.Models
@inject NavigationManager NavigationManager



<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

<PageTitle>Book Catalog</PageTitle>
<h1>Book Catalog </h1>

<div class=" row mb-4">
    <div class=" col-sm-6">
        <button type="button" class="btn btn-primary" @onclick="CreateBook">New Book</button>
    </div>
</div>

@if(books is null)
{
<p><em>Loading...</em></p>    
}
else
{
    <DeleteBook Book = "@currentBook" OnClose = "@OnDeleteModalClose"></DeleteBook>
<table class="=table table-striped table-bordered table-hover">
    <tr class="table-dark">
        <th>ID</th>
        <th>Name</th>
        <th>Genre</th>
        <th>Price</th>
        <th>Publish Date</th>
        <th></th>
    </tr>

    <tbody>
    @foreach(var book in books)
    {
        <tr>
            <td>@book.ID</td>
            <td>@book.Name</td>
            <td>@book.Genre</td>
            <td>@book.Price</td>
            <td>@book.PublishDate.ToShortDateString() </td>
            <td><button class="btn btn-primary" @onclick="(() => EditBook(book.ID))"><i class = "oi oi-pencil"></i></button></td>
            <button class="btn btn-danger" data-bs-toggle = "modal" data-bs-target = "#deleteModal" //toggling the modal from DeleteBook.razor
            @onclick="(() => currentBook = book)">
            <i class="oi oi-x"></i>
            </button>
            <td></td>
        </tr>
    }
    </tbody>
</table>
}

@code {
    private Book[]? books; //? is used to make it nullable array
    private Book? currentBook;
    protected override void OnInitialized()
    {
        books = BookClient.GetBooks(); //blazor will invoke this runtime
    }

    private void CreateBook()
    {
        NavigationManager.NavigateTo("/book");
    }

    private void EditBook(int id)
    {
        NavigationManager.NavigateTo($"/book/{id}"); // $ is for string interpolation
    }


    private void OnDeleteModalClose(bool accepted)
    {
        if (accepted)
        {
            BookClient.DeleteBook(currentBook!.ID);
            books = BookClient.GetBooks();
        }
    }
}
